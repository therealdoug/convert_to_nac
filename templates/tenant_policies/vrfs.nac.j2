{% import 'macro_handler.j2' as helper %}
{% set vrfsns = namespace(vrfs=[]) %}
{% for vrf in this_tenant.children | selectattr('fvCtx', 'defined')
  | map(attribute='fvCtx') | flatten | sort(attribute='attributes.name') %}
  {%- set leakedintpfxsns = namespace(prefix=[] ) -%}
  {% for pfx in vrf.children | selectattr('leakRoutes', 'defined')
    | map(attribute='leakRoutes')
    | selectattr('children', 'defined') | map(attribute='children') | flatten
    | selectattr('leakInternalSubnet', 'defined')
    | map(attribute='leakInternalSubnet')
    | default([]) %}
    {% set pfxdestsns = namespace(dests=[]) %}
    {% for dest in [prefix] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('leakTo', 'defined') | map(attribute='leakTo')
      | default([]) %}
      {% set pfxdestsns.dests = pfxdestsns.dests + [{
        'tenant': dest.attributes.tenantName,
        'vrf': dest.attributes.ctxName,
        'description': dest.attributes.descr | default(''),
        'public': 'true' if dest.attributes.scope == 'public' or
          'false' if dest.attributes.scope == 'private'
          else '' | default('') | replace('inherit', ''),
      }] %}
    {% endfor %}
    {% set leakedintpfxsns.prefix = leakedintpfxsns.prefix + [{
      'prefix': pfx.attributes.ip,
      'public': 'true' if pfx.attributes.scope != 'private' else ''
        | default(''),
      'destinations': pfxdestsns.dests | default([]),
    }] %}
  {% endfor -%}{#- Leaked Internal Prefix -#}

  {%- set leakedextpfxsns = namespace(prefix=[] ) -%}
  {% for pfx in vrf.children | selectattr('leakRoutes', 'defined')
    | map(attribute='leakRoutes')
    | selectattr('children', 'defined') | map(attribute='children') | flatten
    | selectattr('leakExternalSubnet', 'defined')
    | map(attribute='leakExternalSubnet')
    | default([]) %}
    {% set pfxdestsns = namespace(dests=[]) %}
    {% for dest in [prefix] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('leakTo', 'defined') | map(attribute='leakTo')
      | default([]) %}
      {% set pfxdestsns.dests = pfxdestsns.dests + [{
        'tenant': dest.attributes.tenantName,
        'vrf': dest.attributes.ctxName,
        'description': dest.attributes.descr | default(''),
        'public': 'true' if dest.attributes.scope == 'public' or
          'false' if dest.attributes.scope == 'private'
          else '' | default('') | replace('inherit', ''),
      }] %}
    {% endfor %}
    {% set leakedextpfxsns.prefix = leakedextpfxsns.prefix + [{
      'prefix': pfx.attributes.ip,
      'from_prefix_length': pfx.attributes.ge | default(''),
      'to_prefix_length': pfx.attributes.le | default(''),
      'destinations': pfxdestsns.dests | default([]),
    }] %}
  {% endfor %}{#- Leaked External Prefix -#}

  {%- set vrfcontractsns = namespace(contracts={}) -%}
  {% set vrfcontractsns.contracts = {
    'providers': vrf.children | selectattr('vzAny', 'defined')
      | map(attribute='vzAny') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('vzRsAnyToProv', 'defined')
      | map(attribute='vzRsAnyToProv.attributes.tnVzBrCPName')
      | list | default(''),
    'consumers': vrf.children | selectattr('vzAny', 'defined')
      | map(attribute='vzAny') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('vzRsAnyToCons', 'defined')
      | map(attribute='vzRsAnyToCons.attributes.tnVzBrCPName')
      | list | default(''),
    'imported_contracts': vrf.children | selectattr('vzAny', 'defined')
      | map(attribute='vzAny') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('fvRsConsIf', 'defined')
      | map(attribute='fvRsConsIf.attributes.tnVzBrCPName')
      | list | default(''),
  } -%}

  {%- set vrfbgpns = namespace(bgp=[] ) -%}
  {% set vrfbgpns.bgp = {
    'timer_policy': vrf.children
      | selectattr('fvRsBgpCtxPol', 'defined')
      | map(attribute='fvRsBgpCtxPol') | map(attribute='attributes')
      | map(attribute='tnBgpCtxPolName') | first | default(''),
    'ipv4_address_family_context_policy': vrf.children
      | selectattr('fvRsCtxToBgpCtxAfPol', 'defined')
      | map(attribute='fvRsCtxToBgpCtxAfPol')
      | selectattr('attributes.af', 'match', 'ipv4-ucast')
      | map(attribute='attributes.tnBgpCtxAfPolName')
      | first | default(''),
    'ipv6_address_family_context_policy': vrf.children
      | selectattr('fvRsCtxToBgpCtxAfPol', 'defined')
      | map(attribute='fvRsCtxToBgpCtxAfPol')
      | selectattr('attributes.af', 'match', 'ipv6-ucast')
      | map(attribute='attributes.tnBgpCtxAfPolName')
      | first | default(''),
    'ipv4_import_route_target': vrf.children
      | selectattr('bgpRtTargetP', 'defined')
      | map(attribute='bgpRtTargetP')
      | selectattr('attributes.af', 'match', 'ipv4-ucast')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('bgpRtTarget.attributes.type', 'match', 'import')
      | map(attribute='bgpRtTarget.attributes.rt')
      | default(''),
    'ipv4_export_route_target': vrf.children
      | selectattr('bgpRtTargetP', 'defined')
      | map(attribute='bgpRtTargetP')
      | selectattr('attributes.af', 'match', 'ipv4-ucast')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('bgpRtTarget.attributes.type', 'match', 'export')
      | map(attribute='bgpRtTarget.attributes.rt')
      | default(''),
    'ipv6_import_route_target': vrf.children
      | selectattr('bgpRtTargetP', 'defined')
      | map(attribute='bgpRtTargetP')
      | selectattr('attributes.af', 'match', 'ipv6-ucast')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('bgpRtTarget.attributes.type', 'match', 'import')
      | map(attribute='bgpRtTarget.attributes.rt')
      | default(''),
    'ipv6_export_route_target': vrf.children
      | selectattr('bgpRtTargetP', 'defined')
      | map(attribute='bgpRtTargetP')
      | selectattr('attributes.af', 'match', 'ipv6-ucast')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('bgpRtTarget.attributes.type', 'match', 'export')
      | map(attribute='bgpRtTarget.attributes.rt')
      | default(''),
        } -%}

  {%- set vrfospfns = namespace(ospf=[] ) -%}
  {% set vrfospfns.ospf = {
    'timer_policy': vrf.children | selectattr('fvRsOspfCtxPol', 'defined')
      | map(attribute='fvRsOspfCtxPol') | map(attribute='attributes')
      | map(attribute='tnOspfCtxPolName') | first | default(''),
    'ipv4_address_family_context_policy': vrf.children
      | selectattr('fvRsCtxToOspfCtxPol', 'defined')
      | map(attribute='fvRsCtxToOspfCtxPol')
      | selectattr('attributes.af', 'match', 'ipv4-ucast')
      | map(attribute='attributes.tnOspfCtxPolName')
      | first | default(''),
    'ipv6_address_family_context_policy': vrf.children
      | selectattr('fvRsCtxToOspfCtxPol', 'defined')
      | map(attribute='fvRsCtxToOspfCtxPol')
      | selectattr('attributes.af', 'match', 'ipv6-ucast')
      | map(attribute='attributes.tnOspfCtxPolName')
      | first | default(''),
  } -%}

  {%- set vrfpimsns = namespace(pim=[] ) -%}
    {% set pim_children = vrf.children | selectattr('pimCtxP', 'defined' )
    | map(attribute='pimCtxP') | selectattr('children', 'defined')
    | map(attribute='children') | flatten | default([]) %}
    {% set bsr_children = pim_children | selectattr('pimBSRPPol', 'defined' )
      | map(attribute='pimBSRPPol') | selectattr('children', 'defined')
      | map(attribute='children') | flatten | default([]) %}
    {% set staticrpns =  namespace(static_rps=[]) %}
    {% for rp in pim_children | selectattr('pimStaticRPPol', 'defined')
      | map(attribute='pimStaticRPPol') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('pimStaticRPEntryPol', 'defined') | map(attribute='pimStaticRPEntryPol')
      | flatten | list |default([]) %}
      {% set staticrpns.static_rps = staticrpns.static_rps + [{
        'ip': rp.attributes.rpIp,
        'multicast_route_map': [rp]
          | selectattr('children', 'defined') | map(attribute='children')
          | flatten | selectattr('pimRPGrpRangePol', 'defined')
          | map(attribute='pimRPGrpRangePol') | selectattr('children', 'defined')
          | map(attribute='children') | flatten
          | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
          | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn') | first
          | default('') | regex_replace('^.*rtmap-', '')
      }] %}
    {% endfor %}
    {% set fabricrpns = namespace(fabric_rps=[]) %}
    {% for rp in pim_children | selectattr('pimFabricRPPol', 'defined')
      | map(attribute='pimFabricRPPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('pimStaticRPEntryPol', 'defined') | map(attribute='pimStaticRPEntryPol')
      | flatten | default([]) %}
      {% set fabricrpns.fabric_rps = fabricrpns.fabric_rps + [{
        'ip': rp.attributes.rpIp,
        'multicast_route_map': [rp]
          | selectattr('children', 'defined') | map(attribute='children')
          | flatten | selectattr('pimRPGrpRangePol', 'defined')
          | map(attribute='pimRPGrpRangePol') | selectattr('children', 'defined')
          | map(attribute='children') | flatten
          | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
          | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn') | first
          | default('') | regex_replace('^.*rtmap-', '')
      }] %}
    {% endfor %}
    {% set igmpxlatens = namespace(policies=[]) %}
    {% for pol in vrf.children | selectattr('igmpCtxP', 'defined')
      | map(attribute='igmpCtxP') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('igmpSSMXlateP', 'defined') | map(attribute='igmpSSMXlateP')
      | list %}
      {% set igmpxlatens.policies = igmpxlatens.policies + [{
        'group_prefix': pol.attributes.grpPfx,
        'source_address': pol.attributes.srcAddr,
        'description': pol.attributes.descr | default(''),
      }] %}
    {% endfor %}
    {% set intervrfpolns = namespace(policies=[]) %}
    {% for pol in pim_children | selectattr('pimInterVRFPol', 'defined')
      | map(attribute='pimInterVRFPol') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('pimInterVRFEntryPol', 'defined') | map(attribute='pimInterVRFEntryPol')
      | flatten | list | default([]) %}
    {% set intervrfpolns.policies = intervrfpolns.policies + [{
      'tenant': pol.attributes.srcVrfDn | regex_replace('^.*tn-(.*?)/ctx-(.*?)$', '\\1'),
      'vrf': pol.attributes.srcVrfDn | regex_replace('^.*tn-(.*?)/ctx-(.*?)$', '\\2'),
      'multicast_route_map': [po]
        | selectattr('children', 'defined') | map(attribute='children')
        | flatten | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
        | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn') | first
        | default('') | regex_replace('^.*rtmap-', '')
    }] %}
    {% endfor %}
  {% set vrfpimsns.pim = {
    'mtu': vrf.children | selectattr('pimCtxP', 'defined' )
      | map(attribute='pimCtxP') | map(attribute='attributes.mtu') | first
      | default('') | replace('1500', ''),
    'fast_convergence': 'true' if 'fast-conv' in vrf.children
      | selectattr('pimCtxP', 'defined' ) | map(attribute='pimCtxP')
      | map(attribute='attributes.ctrl') | first | default('') else '',
    'strict_rfc': 'true' if 'strict-rfc-compliant' in vrf.children
      | selectattr('pimCtxP', 'defined' ) | map(attribute='pimCtxP')
      | map(attribute='attributes.ctrl') | first | default('') else '',
    'max_multicast_entries': pim_children | selectattr('pimResPol', 'defined')
      | map(attribute='pimResPol') | map(attribute='attributes.max') | first
      | default('') | replace('unlimited', ''),
    'reserved_multicast_entries': pim_children | selectattr('pimResPol', 'defined')
      | map(attribute='pimResPol') | map(attribute='attributes.rsvd') | first
      | default('') | replace('undefined', ''),
    'resource_policy_multicast_route_map': pim_children | selectattr('pimResPol', 'defined')
      | map(attribute='pimResPol') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn') | first
      | default('') | regex_replace('^.*rtmap-', ''),
    'bsr_forward_updates': 'true' if 'forward' in pim_children
      | selectattr('pimBSRPPol', 'defined') | map(attribute='pimBSRPPol')
      | selectattr('attributes', 'defined')
      | map(attribute='attributes.ctrl')| first
      | default('') else '',
    'bsr_listen_updates': 'true' if 'listen' in pim_children
      | selectattr('pimBSRPPol', 'defined') | map(attribute='pimBSRPPol')
      | selectattr('attributes', 'defined')
      | map(attribute='attributes.ctrl') | first
      | default('') else '',
    'bsr_filter_multicast_route_map': bsr_children
      | selectattr('pimBSRFilterPol', 'defined') | map(attribute='pimBSRFilterPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn') | first
      | default('') | regex_replace('^.*rtmap-', ''),
    'autorp_ctrl': pim_children | selectattr('pimAutoRPPol', 'defined')
      | map(attribute='pimAutoRPPol.attributes.ctrl') | first | default(''),
    'auto_rp_forward_updates': 'true' if 'forward' in pim_children
      | selectattr('pimAutoRPPol', 'defined')
      | map(attribute='pimAutoRPPol.attributes.ctrl')
      | default('') else '',
    'auto_rp_listen_updates': 'true' if 'listen' in pim_children
      | selectattr('pimAutoRPPol', 'defined')
      | map(attribute='pimAutoRPPol.attributes.ctrl')
      | default('') else '',
    'auto_rp_filter_multicast_route_map': pim_children
      | selectattr('pimAutoRPPol', 'defined') | map(attribute='pimAutoRPPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('pimMAFilterPol', 'defined') | map(attribute='pimMAFilterPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn') | first
      | default('') | regex_replace('^.*rtmap-', ''),
    'asm_shared_range_multicast_route_map': pim_children
      | selectattr('pimASMPatPol', 'defined') | map(attribute='pimASMPatPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('pimSharedRangePol', 'defined') | map(attribute='pimSharedRangePol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn') | first
      | default('') | regex_replace('^.*rtmap-', ''),
    'asm_sg_expiry_multicast_route_map': pim_children | selectattr('pimASMPatPol', 'defined')
      | map(attribute='pimASMPatPol') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('pimSGRangeExpPol', 'defined') | map(attribute='pimSGRangeExpPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn') | first
      | default('') | regex_replace('^.*rtmap-', ''),
    'asm_sg_expiry': pim_children | selectattr('pimASMPatPol', 'defined')
      | map(attribute='pimASMPatPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('pimSGRangeExpPol', 'defined')
      | map(attribute='pimSGRangeExpPol.attributes.sgExpItvl')
      | first | default('') | replace('default-timeout', ''),
    'asm_traffic_registry_max_rate': pim_children | selectattr('pimASMPatPol', 'defined')
      | map(attribute='pimASMPatPol') | selectattr('children', 'defined')
      | map(attribute='children') | flatten | selectattr('pimRegTrPol', 'defined')
      | map(attribute='pimRegTrPol.attributes.maxRate')
      | first | default('') | replace('65535', ''),
    'asm_traffic_registry_source_ip': pim_children | selectattr('pimASMPatPol', 'defined')
      | map(attribute='pimASMPatPol') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('pimRegTrPol', 'defined') | map(attribute='pimRegTrPol.attributes.srcIp')
      | first | default('') | replace('0.0.0.0', ''),
    'ssm_group_range_multicast_route_map': pim_children | selectattr('pimSSMPatPol', 'defined')
      | map(attribute='pimSSMPatPol') | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('pimSSMRangePol', 'defined') | map(attribute='pimSSMRangePol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn') | first
      | default('') | regex_replace('^.*rtmap-', ''),
    'static_rps': staticrpns.static_rps | default({}),
    'fabric_rps': fabricrpns.fabric_rps | default({}),
    'igmp_context_ssm_translate_policies': igmpxlatens.policies | default([]),
    'inter_vrf_policies': intervrfpolns.policies | default([]),
    } %}
  {%- set vrfrtsumpolicysns = namespace(rt_sum=[] ) -%}
  {% for pol in vrf.children | selectattr('fvCtxRtSummPol', 'defined' )
    | map(attribute='fvCtxRtSummPol') | flatten
    | sort(attribute='attributes.name') %}
    {% set nodesns = namespace(nodes=[]) %}
    {% for node in pol.children | selectattr('fvRsNodeRtSummAtt', 'defined')
      | map(attribute='fvRsNodeRtSummAtt') | map(attribute='attributes.tDn')
      | list | sort %}
      {% set nodesns.nodes = nodesns.nodes + [{
        'id': node | regex_replace('^.*node-(\d{3,})$', '\\1'),
        'pod': node | regex_replace('^.*pod-(\d{1})/.*$', '\\1')
      }] %}
    {% endfor %}

    {%- set subnetsns = namespace(subnets=[]) -%}
    {% for subnet in pol.children | selectattr('fvRtSummSubnet', 'defined')
      | map(attribute='fvRtSummSubnet') | list
      | sort(attribute='attributes.prefix') %}
      {% set subnetsns.subnets = subnetsns.subnets + [{
        'prefix': subnet.attributes.prefix,
        'bgp_route_summarization_policy': subnet
          | selectattr('children', 'defined') | map(attribute='children') | flatten
          | selectattr('fvRsSubnetToRtSummPol', 'defined')
          | map(attribute='fvRsSubnetToRtSummPol')
          | map(attribute='attributes.tDn') | first
          | default('') | regex_replace('^.*bgprtsum-', '')
      }] %}
    {% endfor %}

    {%- set vrfrtsumpolicysns.rt_sum = vrfrtsumpolicysns.rt_sum + [{
      'name': pol.attributes.name,
      'description': pol.attributes.descr | default(''),
      'nodes': nodesns.nodes | default([]),
      'subnets': subnetsns.subnets | default([]),
    }] -%}
  {% endfor %}{#- Rt Summ Policy -#}

  {% set vrfsns.vrfs = vrfsns.vrfs + [{
    'name': vrf.attributes.name,
    'alias': vrf.attributes.nameAlias | default(''),
    'description': vrf.attributes.descr | default(''),
    'data_plane_learning': 'false' if vrf.attributes.ipDataPlaneLearning == 'disabled'
      else '' | default(''),
    'enforcement_direction': vrf.attributes.pcEnfDir | default('')
      | replace('ingress',''),
    'enforcement_preference': vrf.attributes.pcEnfPref | default('')
      | replace('enforced',''),
    'preferred_group': 'true' if vrf.children | selectattr('vzAny', 'defined')
      | map(attribute='vzAny') | selectattr('attributes', 'defined')
      | map(attribute='attributes') | map(attribute='prefGrMemb')
      | first == "enabled" else '' | default(''),
    'leaked_internal_prefixes': leakedintpfxsns.prefix | default([]),
    'leaked_external_prefixes': leakedextpfxsns.prefix | default([]),
    'transit_route_tag_policy': vrf.children
      | selectattr('fvRsCtxToExtRouteTagPol', 'defined')
      | map(attribute='fvRsCtxToExtRouteTagPol.attributes.tnL3extRouteTagPolName')
      | first | default(''),
    'contracts': vrfcontractsns.contracts | default({}),
    'bgp': vrfbgpns.bgp | default({}),
    'ospf': vrfospfns.ospf | default([]),
    'dns_labels': vrf.children | selectattr('dnsLbl', 'defined')
    | map(attribute='dnsLbl.attributes.name') | flatten
    | sort | default([]),
    'pim': vrfpimsns.pim | default([]),
    'route_summarization_policies': vrfrtsumpolicysns.rt_sum | default([]),
  }] %}
{% endfor -%}
{{ 'vrfs:' | indent(6,true) if vrfsns.vrfs else none }}
{{ helper.remove_empty(vrfsns.vrfs) | indent(8,true) if vrfsns.vrfs else none }}