{%- set tnpolns = namespace(policies={}) -%}

{#- tenant.policies.bfd_interface_policies -#}
{%- set bfdintpol = namespace(bfd_interface_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('bfdIfPol', 'defined')
  | map(attribute='bfdIfPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set bfdintpol.bfd_interface_policies = bfdintpol.bfd_interface_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'subinterface_optimization': 'true' if 'opt-subif' in pol.attributes.ctrl
      else '' | default(''),
    'detection_multiplier': pol.attributes.detectMult | default('')
      | regex_replace('^3$', ''),
    'echo_admin_state': 'false' if pol.attributes.echoAdminSt == 'disabled'
      else '' | default(''),
    'echo_rx_interval': pol.attributes.echoRxIntvl | default('')
      | regex_replace('^50$', ''),
    'min_rx_interval': pol.attributes.minRxIntvl | default('')
      | regex_replace('^50$', ''),
    'min_tx_interval': pol.attributes.minTxIntvl | default('')
      | regex_replace('^50$', ''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('bfd_interface_policies',
  bfdintpol.bfd_interface_policies) -%}

{#- tenant.policies.bfd_multihop_node_policies -#}
{%- set bfdmhpol = namespace(bfd_multihop_node_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('bfdMhNodePol', 'defined')
  | map(attribute='bfdMhNodePol') | default('')
  | sort(attribute='attributes.name') %}
  {% set bfdmhpol.bfd_multihop_node_policies = bfdmhpol.bfd_multihop_node_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'detection_multiplier': pol.attributes.detectMult | default('')
      | regex_replace('^3$', ''),
    'min_rx_interval': pol.attributes.minRxIntvl | default('')
      | regex_replace('^250$', ''),
    'min_tx_interval': pol.attributes.minTxIntvl | default('')
      | regex_replace('^250$', ''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('bfd_multihop_node_policies',
  bfdmhpol.bfd_multihop_node_policies) -%}

{#- tenant.policies.bgp_address_family_context_policies -#}
{%- set bgpctxpol = namespace(bgp_address_family_context_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('bgpCtxAfPol', 'defined')
  | map(attribute='bgpCtxAfPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set bgpctxpol.bgp_address_family_context_policies =
    bgpctxpol.bgp_address_family_context_policies + [{
      'name': pol.attributes.name,
      'description': pol.attributes.descr | default(''),
      'ebgp_distance': pol.attributes.eDist | default('') 
        | regex_replace('^20$', ''),
      'ibgp_distance': pol.attributes.iDist | default('') 
        | regex_replace('^200$', ''),
      'local_distance': pol.attributes.localDist | default('') 
        | regex_replace('^220$', ''),
      'ebgp_max_ecmp': pol.attributes.maxEcmp | default('') 
        | regex_replace('^16$', ''),
      'ibgp_max_ecmp': pol.attributes.maxEcmpIbgp | default('') 
        | regex_replace('^16$', ''),
      'local_max_ecmp': pol.attributes.maxLocalEcmp | default(''),
      'enable_host_route_leak': 'true' if 'host-rt-leak' in pol.attributes.ctrl
        else '' | default(''),
    }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('bgp_address_family_context_policies',
  bgpctxpol.bgp_address_family_context_policies) -%}

{#- tenant.policies.bgp_best_path_policies -#}
{%- set bgpbestp = namespace(bgp_best_path_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('bgpBestPathCtrlPol', 'defined')
  | map(attribute='bgpBestPathCtrlPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set bgpbestp.bgp_best_path_policies = bgpbestp.bgp_best_path_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'as_path_multipath_relax': 'true' if 'asPathMultipathRelax' in pol.attributes.ctrl
      else '' | default(''),
    'ignore_igp_metric': 'true' if 'ignoreIgpMetric' in pol.attributes.ctrl
      else '' | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('bgp_best_path_policies', bgpbestp.bgp_best_path_policies) -%}

{#- tenant.policies.bfd_multihop_node_policies -#}
{%- set bgppfxpol = namespace(bgp_peer_prefix_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('bfdMhNodePol', 'defined')
  | map(attribute='bfdMhNodePol') | default('')
  | sort(attribute='attributes.name') %}
  {% set bgppfxpol.bgp_peer_prefix_policies = bgppfxpol.bgp_peer_prefix_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'acion': pol.attributes.action | default('') | replace('reject', ''),
    'max_prefixes': pol.attributes.maxPfx | default('')
      | regex_replace('^20000$', ''),
    'threshold': pol.attributes.thresh | default('')
      | regex_replace('^75$', ''),
    'restart_time': pol.attributes.restartTie | default('')
      | regex_replace('^65534$', ''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('bgp_peer_prefix_policies', bgppfxpol.bgp_peer_prefix_policies) -%}

{#- tenant.policies.bgp_route_summarization_policies -#}
{%- set bfdintpol = namespace(bgp_route_summarization_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('bgpRtSummPol', 'defined')
  | map(attribute='bgpRtSummPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set bfdintpol.bgp_route_summarization_policies = bfdintpol.bgp_route_summarization_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'as_set': 'true' if 'as-set' in pol.attributes.ctrl
      else '' | default(''),
    'summary_only': 'true' if 'summary-only' in pol.attributes.ctrl
      else '' | default(''),
    'af_mcast': 'true' if 'af-mcast' in pol.attributes.ctrl
      else '' | default(''),
    'af_ucast': 'false' if 'af-ucast' not in pol.attributes.ctrl
      else '' | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('bgp_route_summarization_policies', bfdintpol.bgp_route_summarization_policies) -%}

{#- tenant.policies.bgp_timer_policies -#}
{%- set bpgtimerpol = namespace(bgp_timer_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('bgpCtxPol', 'defined')
  | map(attribute='bgpCtxPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set bpgtimerpol.bgp_timer_policies = bpgtimerpol.bgp_timer_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'keepalive_interval': pol.attributes.kaIntvl | default('')
      | regex_replace('^60$', ''),
    'hold_interval': pol.attributes.holdIntvl | default('')
      | regex_replace('^180$', ''),
    'stale_interval': pol.attributes.staleIntvl | default('')
      | regex_replace('^replace$', ''),
    'graceful_restart_helper': 'false' if 'helper' in pol.attributes.descr
      else '' | default(''),
    'maximum_as_limit': pol.attributes.maxAsLimit | default('')
      | regex_replace('^0$', ''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('bgp_timer_policies', bpgtimerpol.bgp_timer_policies) -%}

{#- tenant.policies.dhcp_option_policies -#}
{%- set dhcpoptpol = namespace(dhcp_option_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('dhcpOptionPol', 'defined')
  | map(attribute='dhcpOptionPol') | default('')
  | sort(attribute='attributes.name') %}
  {%- set optsns = namespace(options=[]) -%}
  {% for opt in [pol] | selectattr('children', 'defined')
    | map(attribute='children') | flatten
    | selectattr('dhcpOption', 'defined') | map(attribute='dhcpOption')
    | default('') | sort(attribute='attributes.name') %}
    {% set optsns.options = optsns.options + [{
      'name': opt.attributes.name,
      'description': opt.attributes.descr | default(''),
      'id': opt.attributes.id | default(''),
      'data': opt.attributes.data | default(''),
    }] %}
  {% endfor %}
  {% set dhcpoptpol.dhcp_option_policies = dhcpoptpol.dhcp_option_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'options': optsns.options,
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('dhcp_option_policies', dhcpoptpol.dhcp_option_policies) -%}

{#- tenant.policies.dhcp_relay_policies -#}
{%- set dhcprelpol = namespace(dhcp_relay_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('dhcpRelayP', 'defined')
  | map(attribute='dhcpRelayP') | default('')
  | sort(attribute='attributes.name') %}
  {%- set provns = namespace(providers=[]) -%}
  {% for prov in [pol] | selectattr('children', 'defined')
    | map(attribute='children') | flatten
    | selectattr('dhcpRsProv', 'defined') | map(attribute='dhcpRsProv')
    | default('') | sort(attribute='attributes.name') %}
    {% set provns.providers = provns.providers + [{
      'ip': prov.attributes.addr,
      'type': 'external_epg' if '/out-' in prov.attributes.tDn else 'epg',
      'tenant': prov.attributes.tDn
        | regex_replace('uni\/tn-(.*?)\/(?:out-|ap-)(.*?)\/(?:instP-|epg-)(.*?)$', '\\1'),
      'application_profile': prov.attributes.tDn
        | regex_replace('uni\/tn-(.*?)\/(?:out-|ap-)(.*?)\/(?:instP-|epg-)(.*?)$', '\\2')
        if '/ap-' in prov.attributes.tDn else '' | default(''),
      'l3out': prov.attributes.tDn
        | regex_replace('uni\/tn-(.*?)\/(?:out-|ap-)(.*?)\/(?:instP-|epg-)(.*?)$', '\\2')
        if '/out-' in prov.attributes.tDn else '' | default(''),
      'endpoint_group': prov.attributes.tDn
        | regex_replace('uni\/tn-(.*?)\/(?:out-|ap-)(.*?)\/(?:instP-|epg-)(.*?)$', '\\3')
        if '/ap-' in prov.attributes.tDn else '' | default(''),
      'external_endpoint_group': prov.attributes.tDn
        | regex_replace('uni\/tn-(.*?)\/(?:out-|ap-)(.*?)\/(?:instP-|epg-)(.*?)$', '\\3')
        if '/out-' in prov.attributes.tDn else '' | default(''),
    }] %}
  {% endfor %}
  {% set dhcprelpol.dhcp_relay_policies = dhcprelpol.dhcp_relay_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'providers': provns.providers,
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('dhcp_relay_policies', dhcprelpol.dhcp_relay_policies) -%}

{#- tenant.policies.eigrp_interface_policies -#}
{%- set eirgpintpol = namespace(eigrp_interface_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('bfdIfPol', 'defined')
  | map(attribute='bfdIfPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set eirgpintpol.eigrp_interface_policies = eirgpintpol.eigrp_interface_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'passive_interface': 'true' if 'passive' in pol.attributes.ctrl
      else '' | default(''),
    'split_horizon': 'false' if 'split-horizon' in pol.attributes.ctrl
      else '' | default(''),
    'self_nexthop': 'false' if 'nh-self' in pol.attributes.ctrl
      else '' | default(''),
    'bfd': 'true' if 'bfd' in pol.attributes.ctrl
      else '' | default(''),
    'hello_interval': pol.attributes.helloIntvl | default('')
      | regex_replace('^5$', ''),
    'hold_interval': pol.attributes.holdIntvl | default('')
      | regex_replace('^15$', ''),
    'bandwidth': pol.attributes.bw | default('')
      | regex_replace('^0$', ''),
    'delay': pol.attributes.delay | default('')
      | regex_replace('^0$', ''),
    'delay_unit': pol.attributes.delayUnit | default('')
      | regex_replace('^tens-of-micro$', '')
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('eigrp_interface_policies', eirgpintpol.eigrp_interface_policies) -%}

{#- tenant.policies.endpoint_ip_tags -#}
{%- set epiptagpol = namespace(endpoint_ip_tags=[]) -%}
{% for pol in this_tenant.children | selectattr('fvEpTags', 'defined')
  | map(attribute='fvEpTags')
  | selectattr('children', 'defined') | map(attribute='children') | flatten
  | selectattr('fvEpIpTag', 'defined') | map(attribute='fvEpIpTag')
  | default('') | sort(attribute='attributes.ip') %}
  {%- set tagsns = namespace(tags=[]) -%}
  {% for tag in [pol] | selectattr('children', 'defined') 
    | map(attribute='children') | flatten
    | selectattr('tagTag', 'defined') | map(attribute='tagTag')
    | sort(attribute='attributes.key') %}
    {% set tagsns.tags = tagsns.tags + [{
      'key': tag.attributes.key,
      'value': tag.attributes.value,
    }] %}
  {% endfor %}
  {% set epiptagpol.endpoint_ip_tags = epiptagpol.endpoint_ip_tags + [{
    'ip': pol.attributes.ip,
    'vrf': pol.attributes.ctxName | default(''),
    'tags': tagsns.tags | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('endpoint_ip_tags', epiptagpol.endpoint_ip_tags) -%}

{#- tenant.policies.endpoint_mac_tags -#}
{%- set epmactagpol = namespace(endpoint_mac_tags=[]) -%}
{% for pol in this_tenant.children | selectattr('fvEpTags', 'defined')
  | map(attribute='fvEpTags')
  | selectattr('children', 'defined') | map(attribute='children') | flatten
  | selectattr('fvEpMacTag', 'defined') | map(attribute='fvEpMacTag')
  | default('') | sort(attribute='attributes.ip') %}
  {%- set tagsns = namespace(tags=[]) -%}
  {% for tag in [pol] | selectattr('children', 'defined') 
    | map(attribute='children') | flatten
    | selectattr('tagTag', 'defined') | map(attribute='tagTag')
    | sort(attribute='attributes.key') %}
    {% set tagsns.tags = tagsns.tags + [{
      'key': tag.attributes.key,
      'value': tag.attributes.value,
    }] %}
  {% endfor %}
  {% set epmactagpol.endpoint_mac_tags = epmactagpol.endpoint_mac_tags + [{
    'mac': pol.attributes.mac,
    'bridge_domain': pol.attributes.bdName | default('')
      | regex_replace('^\*$', 'all'),
    'vrf': pol.attributes.ctxName | default(''),
    'tags': tagsns.tags | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('endpoint_mac_tags', epmactagpol.endpoint_mac_tags) -%}

{#- tenant.policies.endpoint_retention_policies -#}
{%- set epretpol = namespace(endpoint_retention_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('fvEpRetPol', 'defined')
  | map(attribute='fvEpRetPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set epretpol.endpoint_retention_policies = epretpol.endpoint_retention_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'hold_interval': pol.attributes.holdIntvl | default('')
      | regex_replace('^300$', ''),
    'bounce_entry_aging_interval': pol.attributes.bounceAgeIntvl | default('')
      | regex_replace('^630$', ''),
    'local_endpoint_aging_interval': pol.attributes.localEpAgeIntvl | default('')
      | regex_replace('^900$', ''),
    'remote_endpoint_aging_interval': pol.attributes.remoteEpAgeIntvl | default('')
      | regex_replace('^300$', ''),
    'move_frequency': pol.attributes.moveFreq | default('')
      | regex_replace('^256$', ''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('endpoint_retention_policies', epretpol.endpoint_retention_policies) -%}

{#- tenant.policies.igmp_interface_policies -#}
{%- set igmpifpol = namespace(igmp_interface_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('igmpIfPol', 'defined')
  | map(attribute='igmpIfPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set igmpifpol.igmp_interface_policies = igmpifpol.igmp_interface_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'grp_timeout': pol.attributes.grpTimeout | default('')
      | regex_replace('^260$', ''),
    'allow_v3_asm': 'true' if 'allow-v3-asm' in pol.attributes.ifCtrl
      else '' | default(''),
    'fast_leave': 'true' if 'fast-leave' in pol.attributes.ifCtrl
      else '' | default(''),
    'report_link_local_groups': 'true' if 'rep-ll' in pol.attributes.ifCtrl
      else '' | default(''),
    'last_member_count':  pol.attributes.lastMbrCnt | default('')
      | regex_replace('^2$', ''),
    'last_member_response_time': pol.attributes.lastMbrRespTime | default('')
      | regex_replace('^1$', ''), 
    'querier_timeout': pol.attributes.querierTimeout | default('')
      | regex_replace('^255$', ''),
    'query_interval': pol.attributes.queryIntvl | default('')
      | regex_replace('^125$', ''),
    'robustness_variable': pol.attributes.robustFac | default('')
      | regex_replace('^2$', ''),
    'query_response_interval': pol.attributes.rspIntvl | default('')
      | regex_replace('^25$', ''),
    'startup_query_count': pol.attributes.startQueryCnt | default('')
      | regex_replace('^2$', ''),
    'startup_query_interval': pol.attributes.startQueryIntvl | default('')
      | regex_replace('^31$', ''),
    'version': pol.attributes.ver | default('')
      | regex_replace('^v2$', ''),
    'max_mcast_entries': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('igmpStateLPol', 'defined')
      | map(attribute='igmpStateLPol.attributes.max')
      | default('') | first | default('') | regex_replace('^unlimited$', ''),
    'reserved_mcast_entries': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('igmpStateLPol', 'defined')
      | map(attribute='igmpStateLPol.attributes.rsvd')
      | first | default('') | regex_replace('^undefined$', ''),
    'state_limit_multicast_route_map': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten 
      | selectattr('igmpStateLPol', 'defined') | map(attribute='igmpStateLPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn')
      | first | default(''),
    'report_policy_multicast_route_map': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten 
      | selectattr('igmpStRepPol', 'defined') | map(attribute='igmpStRepPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn')
      | first | default(''),
    'static_report_multicast_route_map': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten 
      | selectattr('igmpRepPol', 'defined') | map(attribute='igmpRepPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn')
      | first | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('igmp_interface_policies', igmpifpol.igmp_interface_policies) -%}

{#- tenant.policies.igmp_snooping_policies -#}
{%- set snooppol = namespace(igmp_snooping_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('igmpSnoopPol', 'defined')
  | map(attribute='igmpSnoopPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set snooppol.igmp_snooping_policies = snooppol.igmp_snooping_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'admin_state': 'false' if pol.attributes.adminSt == 'disabled'
      else '' | default(''),
    'last_member_query_interval': pol.attributes.lastMbrIntvl | default('')
      | regex_replace('^1$', ''),
    'query_interval': pol.attributes.queryIntvl | default('')
      | regex_replace('^125$', ''),
    'query_response_interval': pol.attributes.rspIntvl | default('')
      | regex_replace('^10$', ''),
    'start_query_count': pol.attributes.startQueryCnt | default('')
      | regex_replace('^2$', ''),
    'start_query_interval': pol.attributes.startQueryIntvl | default('')
      | regex_replace('^31$', ''),
    'fast_leave': 'true' if 'fast-leave' in pol.attributes.ctrl
      else '' | default(''),
    'querier': 'true' if 'querier' in pol.attributes.ctrl
      else '' | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('igmp_snooping_policies', snooppol.igmp_snooping_policies) -%}

{#- tenant.policies.ip_sla_policies -#}
{%- set ipslapol = namespace(ip_sla_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('fvIPSLAMonitoringPol', 'defined')
  | map(attribute='fvIPSLAMonitoringPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set ipslapol.ip_sla_policies = ipslapol.ip_sla_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'frequency': pol.attributes.slaFrequency | default('')
      | regex_replace('^60$', ''),
    'multiplier': pol.attributes.slaDetectMultiplier | default('')
      | regex_replace('^3$', ''),
    'sla_type': pol.attributes.slaType | default('')
      | regex_replace('^icmp$', ''),
    'port': pol.attributes.slaPort | default('')
      | regex_replace('^0$', ''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('ip_sla_policies', ipslapol.ip_sla_policies) -%}

{#- tenant.policies.match_rules -#}
{%- set matchpol = namespace(match_rules=[]) -%}
{% for pol in this_tenant.children | selectattr('rtctrlSubjP', 'defined')
  | map(attribute='rtctrlSubjP') | default('')
  | sort(attribute='attributes.name') %}
  
  {%- set regexcommlist = namespace(regex_community_terms=[]) -%}
  {% for comm in [pol] | selectattr('children', 'defined')
    | map(attribute='children') | flatten 
    | selectattr('rtctrlMatchCommRegexTerm', 'defined')
    | map(attribute='rtctrlMatchCommRegexTerm') 
    | sort(attribute='attributes.name') | default('') %}

    {%- set regexcommlist.regex_community_terms = regexcommlist.regex_community_terms + [{
      'name': comm.attributes.name,
      'description': comm.attributes.descr | default(''),
      'regex': comm.attributes.regex | default(''),
      'type': comm.attributes.commType | default('')
        | replace('regular', ''),
    }] -%}
  {% endfor %}

  {%- set commlist = namespace(community_terms=[]) -%}
  {% for comm in [pol] | selectattr('children', 'defined')
    | map(attribute='children') | flatten 
    | selectattr('rtctrlMatchCommTerm', 'defined')
    | map(attribute='rtctrlMatchCommTerm') 
    | sort(attribute='attributes.name') | default('') %}

    {%- set factorns = namespace(factors=[]) -%}
    {% for factor in [comm] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('rtctrlMatchCommFactor', 'defined')
      | map(attribute='rtctrlMatchCommFactor') 
      | sort(attribute='attributes.community')%}
      {%- set factorns.factors = factorns.factors + [{
        'community': factor.attributes.community | default(''),
        'description': factor.attributes.descr | default(''),
        'scope': factor.attributes.scope | default('')
          | regex_replace('^transitive$', ''),
      }] -%}
    {% endfor %}

    {%- set commlist.community_terms = commlist.community_terms + [{
      'name': comm.attributes.name,
      'description': comm.attributes.descr | default(''),
      'factors': factorns.factors | default(''),
    }] -%}
  {% endfor %}

  {%- set pfxpol = namespace(prefixes=[]) -%}
  {% for pfx in [pol] | selectattr('children', 'defined')
    | map(attribute='children') | flatten 
    | selectattr('rtctrlMatchRtDest', 'defined')
    | map(attribute='rtctrlMatchRtDest') 
    | sort(attribute='attributes.ip') | default('') %}
    {%- set pfxpol.prefixes = pfxpol.prefixes + [{
      'ip': pfx.attributes.ip,
      'description': pfx.attributes.descr | default(''),
      'aggregate': 'true' if pfx.attributes.aggregate == 'yes'
        else '' | default(''),
      'from_length': pfx.attributes.fromPfxLen | default('')
        | regex_replace('^0$', ''),
      'to_length': pfx.attributes.toPfxLen | default('')
        | regex_replace('^0$', ''),
    }] -%}
  {% endfor %}
  {%- set matchpol.match_rules = matchpol.match_rules + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'regex_community_terms': regexcommlist.regex_community_terms | default(''),
    'community_terms': commlist.community_terms | default(''),
    'prefixes': pfxpol.prefixes | default(''),
  }] -%}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('match_rules', matchpol.match_rules) -%}

{#- tenant.policies.mpls_custom_qos_policies -#}
{%- set mplsqospol = namespace(mpls_custom_qos_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('qosMplsCustomPol', 'defined')
  | map(attribute='qosMplsCustomPol') | default('')
  | sort(attribute='attributes.name') %}

  {%- set qosing = namespace(ingress_rules=[]) -%}
  {% for rule in [pol] | selectattr('children', 'defined')
    | map(attribute='children') | flatten
    | selectattr('qosMplsIngressRule', 'defined')
    | map(attribute='qosMplsIngressRule')
    | default('') | sort(attribute='attributes.from') %}
    {% set qosing.ingress_rules = qosing.ingress_rules + [{
      'exp_from': rule.attributes.from,
      'exp_to': rule.attributes.to | default(''),
      'priority': rule.attributes.prio | default('')
        | regex_replace('^unspecified$', ''),
      'dscp_target': rule.attributes.target | default('')
        | regex_replace('^unspecified$', ''),
      'cos_target': rule.attributes.targetCos | default('')
        | regex_replace('^unspecified$', ''),
    }] %}  
  {% endfor %}

  {%- set qosegr = namespace(egress_rules=[]) -%}
  {% for rule in [pol] | selectattr('children', 'defined')
    | map(attribute='children') | flatten
    | selectattr('qosMplsEgressRule', 'defined')
    | map(attribute='qosMplsEgressRule')
    | default('') | sort(attribute='attributes.from') %}
    {% set qosegr.egress_rules = qosegr.egress_rules + [{
      'dscp_from': rule.attributes.from,
      'dscp_to': rule.attributes.to,
      'exp_target': rule.attributes.targetExp | default('')
        | regex_replace('^unspecified$', ''),
      'cos_target': rule.attributes.targetCos | default('')
        | regex_replace('^unspecified$', ''),
    }] %}  
  {% endfor %}

  {% set mplsqospol.mpls_custom_qos_policies = mplsqospol.mpls_custom_qos_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'alias': pol.attributes.nameAlias | default(''),
    'ingress_rules': qosing.ingress_rules | default(''),
    'egress_rules': qosegr.egress_rules | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('mpls_custom_qos_policies', mplsqospol.mpls_custom_qos_policies) -%}

{#- tenant.policies.multicast_route_maps -#}
{%- set mcastrtmap = namespace(multicast_route_maps=[]) -%}
{% for pol in this_tenant.children | selectattr('pimRouteMapPol', 'defined')
  | map(attribute='pimRouteMapPol') | default('')
  | sort(attribute='attributes.name') %}
  {%- set entry = namespace(entries=[]) -%}
  {% for ent in [pol] | selectattr('children', 'defined')
    | map(attribute='children') | flatten
    | selectattr('pimRouteMapEntry', 'defined')
    | map(attribute='pimRouteMapEntry') 
    | default('') | sort(attribute='attributes.order,attributes.grp') %}
    {%- set entry.entries = entry.entries + [{
      'order': ent.attributes.order | default(''),
      'source_ip': ent.attributes.src | default('')
        | regex_replace('^0.0.0.0(?:\/0|$)', ''),
      'group_ip': ent.attributes.grp | default('')
        | regex_replace('^0.0.0.0(?:\/0|$)', ''),
      'rp_ip': ent.attributes.rp | default('')
        | regex_replace('^0.0.0.0(?:\/0|$)', ''),
      'action': ent.attributes.action | default('') | replace('permit', ''),
    }] -%}
  {% endfor %}
  {% set mcastrtmap.multicast_route_maps = mcastrtmap.multicast_route_maps + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'entries': entry.entries | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('multicast_route_maps', mcastrtmap.multicast_route_maps) -%}

{#- tenant.policies.nd_interface_policies -#}
{%- set ndintpol = namespace(nd_interface_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('ndIfPol', 'defined')
  | map(attribute='ndIfPol') | default('')
  | sort(attribute='attributes.name') %}

  {% set ndintpol.nd_interface_policies = ndintpol.nd_interface_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'hop_limit': pol.attributes.hopLimit | default('')
      | regex_replace('^64$', ''),
    'ns_tx_interval': pol.attributes.nsIntvl | default('')
      | regex_replace('^1000$', ''),
    'mtu': pol.attributes.mtu | default('')
      | regex_replace('^9000$', ''),
    'retransmit_retry_count': pol.attributes.nsRetries | default('')
      | regex_replace('^3$', ''),
    'nud_retransmit_base': pol.attributes.nudRetryBase | default('')
      | regex_replace('^1$', ''),
    'nud_retransmit_interval': pol.attributes.nudRetryInterval | default('')
      | regex_replace('^1000$', ''),
    'nud_retransmit_count': pol.attributes.nudRetryMaxAttempts | default('')
      | regex_replace('^3$', ''),
    'route_advertise_interval': pol.attributes.raIntvl | default('')
      | regex_replace('^600$', ''),
    'router_lifetime': pol.attributes.raLifetime | default('')
      | regex_replace('^1800$', ''),
    'reachable_time': pol.attributes.reachableTime | default('')
      | regex_replace('^0$', ''),
    'retransmit_timer': pol.attributes.retransTimer | default('')
      | regex_replace('^0$', ''),
    'controller_state': pol.attributes.ctrl | default('') | split(',')
      if pol.attributes.ctrl != '' else '',
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('nd_interface_policies', ndintpol.nd_interface_policies) -%}

{#- tenant.policies.nd_ra_prefix_policies -#}
{%- set ndrapfxpol = namespace(nd_ra_prefix_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('ndPfxPol', 'defined')
  | map(attribute='ndPfxPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set ndrapfxpol.nd_ra_prefix_policies = ndrapfxpol.nd_ra_prefix_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'valid_lifetime': pol.attributes.lifetime | default('')
      | regex_replace('^2592000$', ''),
    'preferred_lifetime': pol.attributes.prefLifetime | default('')
      | regex_replace('^604800$', ''),
    'auto_configuration': 'false' if 'auto-cfg' not in pol.attributes.ctrl
      else 'true' | default(''),
    'on_link': 'false' if 'on-link' not in pol.attributes.ctrl
      else 'true' | default(''),
    'router_address': 'true' if 'router-address' in pol.attributes.ctrl
      else '' | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('nd_ra_prefix_policies', ndrapfxpol.nd_ra_prefix_policies) -%}

{#- tenant.policies.ospf_interface_policies -#}
{%- set ospfintpol = namespace(ospf_interface_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('ospfIfPol', 'defined')
  | map(attribute='ospfIfPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set ospfintpol.ospf_interface_policies = ospfintpol.ospf_interface_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'cost': pol.attributes.cost | default('')
      | regex_replace('^unspecified$', ''),
    'passive_interface': 'true' if 'passive' in pol.attributes.ctrl
      else '' | default(''),
    'mtu_ignore': 'true' if 'mtu-ignore' in pol.attributes.ctrl
      else '' | default(''),
    'advertise_subnet': 'true' if 'advert-subnet' in pol.attributes.ctrl
      else '' | default(''),
    'bfd': 'true' if 'bfd' in pol.attributes.ctrl
      else '' | default(''),
    'hello_interval': pol.attributes.helloIntvl | default('')
      | regex_replace('^10$', ''),
    'dead_interval': pol.attributes.deadIntvl | default('')
      | regex_replace('^40$', ''),
    'network_type': pol.attributes.nwT | default('')
      | regex_replace('^p2p$', ''),
    'priority': pol.attributes.prio | default('')
      | regex_replace('^1$', ''),
    'lsa_retransmit_interval': pol.attributes.rexmitIntvl | default('')
      | regex_replace('^5$', ''),
    'lsa_transmit_delay': pol.attributes.xmitDelay | default('')
      | regex_replace('^1$', ''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('ospf_interface_policies', ospfintpol.ospf_interface_policies) -%}

{#- tenant.policies.ospf_timer_policies -#}
{%- set ospftmrpol = namespace(ospf_timer_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('ospfCtxPol', 'defined')
  | map(attribute='ospfCtxPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set ospftmrpol.ospf_timer_policies = ospftmrpol.ospf_timer_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
    'reference_bandwidth': pol.attributes.bwRef | default('')
      | regex_replace('^40000$', ''),
    'distance': pol.attributes.dist | default('')
      | regex_replace('^110$', ''),
    'max_ecmp': pol.attributes.maxEcmp | default('')
      | regex_replace('^8$', ''),
    'spf_init_interval': pol.attributes.spfInitIntvl | default('')
      | regex_replace('^200$', ''),
    'spf_hold_interval': pol.attributes.spfHoldIntvl | default('')
      | regex_replace('^1000$', ''),
    'spf_max_interval': pol.attributes.spfMaxIntvl | default('')
      | regex_replace('^5000$', ''),
    'max_lsa_reset_interval': pol.attributes.maxLsaResetIntvl | default('')
      | regex_replace('^10$', ''),
    'max_lsa_sleep_count': pol.attributes.maxLsaSleepCnt | default('')
      | regex_replace('^5$', ''),
    'max_lsa_sleep_interval': pol.attributes.maxLsaSleepIntvl | default('')
      | regex_replace('^5$', ''),
    'lsa_arrival_interval': pol.attributes.lsaArrivalIntvl | default('')
      | regex_replace('^100$', ''),
    'lsa_group_pacing_interval': pol.attributes.lsaGpPacingIntvl | default('')
      | regex_replace('^10$', ''),
    'lsa_hold_interval': pol.attributes.lsaHoldIntvl | default('')
      | regex_replace('^5000$', ''),
    'lsa_start_interval': pol.attributes.lsaStartIntvl | default('')
      | regex_replace('^0$', ''), 
    'lsa_max_interval': pol.attributes.lsaMaxIntvl | default('')
      | regex_replace('^5000$', ''), 
    'max_lsa_num': pol.attributes.maxLsaNum | default('')
      | regex_replace('^20000$', ''), 
    'max_lsa_threshold':  pol.attributes.maxLsaThresh | default('')
      | regex_replace('^75$', ''), 
    'max_lsa_action': pol.attributes.maxLsaAction | default('')
      | regex_replace('^reject$', ''), 
    'graceful_restart': 'true' if 'helper' in pol.attributes.grCtrl
      else '' | default(''),
    'router_id_lookup': 'true' if 'name-lookup' in pol.attributes.ctrl
      else '' | default(''),
    'prefix_suppression': 'true' if 'pfx-suppress' in pol.attributes.ctrl
      else '' | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('ospf_timer_policies', ospftmrpol.ospf_timer_policies) -%}

{#- tenant.policies.pim_policies -#}
{%- set pimpol = namespace(pim_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('pimIfPol', 'defined')
  | map(attribute='pimIfPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set pimpol.pim_policies = pimpol.pim_policies + [{
    'name': pol.attributes.name,
    'auth_key': pol.attributes.secureAuthKey | default('!!!PLEASE_UPDATE_MANUALLY!!!'),
    'auth_type': pol.attributes.authT | default('')
      | regex_replace('^none$', ''),
    'designated_router_delay': pol.attributes.drDelay | default('')
      | regex_replace('^3$', ''),
    'designated_router_priority': pol.attributes.drPrio | default('')
      | regex_replace('^1$', ''),
    'hello_interval': pol.attributes.helloItvl | default('')
      | regex_replace('^30000$', ''),
    'join_prune_interval': pol.attributes.jpInterval | default('')
      | regex_replace('^60$', ''),
    'mcast_dom_boundary': 'true' if 'border' in pol.attributes.ctrl
      else '' | default(''),
    'passive': 'true' if 'passive' in pol.attributes.ctrl
      else '' | default(''),
    'strict_rfc': 'true' if 'strict-rfc-compliant' in pol.attributes.ctrl
      else '' | default(''),
    'join_prune_filter_policy_in': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('pimJPInbFilterPol', 'defined') | map(attribute='pimJPInbFilterPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn')
      | first | default('') | regex_replace('^.*rtmap-(.*?)$', '\\1'),
    'join_prune_filter_policy_out': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('pimJPOutbFilterPol', 'defined') | map(attribute='pimJPOutbFilterPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn')
      | first | default('') | regex_replace('^.*rtmap-(.*?)$', '\\1'),
    'neighbor_filter_policy': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('pimNbrFilterPol', 'defined') | map(attribute='pimNbrFilterPol')
      | selectattr('children', 'defined') | map(attribute='children') | flatten
      | selectattr('rtdmcRsFilterToRtMapPol', 'defined')
      | map(attribute='rtdmcRsFilterToRtMapPol.attributes.tDn')
      | first | default('') | regex_replace('^.*rtmap-(.*?)$', '\\1'),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('pim_policies', pimpol.pim_policies) -%}

{#- tenant.policies.qos -#}
{# {%- set bfdintpol = namespace(bfd_interface_policies=[]) -%}
{% for pol in this_tenant.children | selectattr('bfdIfPol', 'defined')
  | map(attribute='bfdIfPol') | default('')
  | sort(attribute='attributes.name') %}
  {% set bfdintpol.bfd_interface_policies = bfdintpol.bfd_interface_policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default(''),
  }] %}
{% endfor %}
{%- set _ = tnpolns.policies.__setitem__('bfd_interface_policies', bfdintpol.bfd_interface_policies) -%} #}

{#- tenant.policies.route_control_route_maps -#}
{#- tenant.policies.route_tag_policies -#}
{#- tenant.policies.set_rules -#}
{#- tenant.policies.span -#}
{#- tenant.policies.track_lists -#}
{#- tenant.policies.track_members -#}
{#- tenant.policies.trust_control_policies -#}
{#- tenant.policies.trust_control_policies -#}

{%- set _=tenantns.tenant_policies.__setitem__('policies', tnpolns.policies ) %}