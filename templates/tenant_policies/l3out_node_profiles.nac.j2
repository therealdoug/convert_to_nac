{% set node_profiles = [l3o]
  | selectattr('children', 'defined') | map(attribute='children') | flatten | list
  | selectattr('l3extLNodeP', 'defined') | map(attribute='l3extLNodeP')
  | list | default([]) %}
        {% if node_profiles | length > 0 %}
          node_profiles:
          {% for np in node_profiles %}
            {# bgp class for apic.tenants.l3outs.node_profiles.bgp #}
            {% set bgp_policy = [np]
              | selectattr('children', 'defined') | map(attribute='children') | flatten | list
              | selectattr('bgpProtP', 'defined') | map(attribute='bgpProtP')
              | first | default([]) %}
            {% set npp = {
              'name': np.attributes.name,
              'alias': np.attributes.nameAlias | default(''),
              'description': np.attributes.descr | default(''),
            }%}
            {% for policy, value in npp.items() if value != '' %}
              {% if loop.first %}
            - {{ policy }}: {{ value }}
              {% else %}
              {{ policy }}: {{ value }}
              {% endif %}
            {% endfor %}
            {% if bgp_policy | length > 0 %}
              bgp:
                {% set bgpp = {
                'name': bgp_policy.attributes.name | default(''),
                'timer_policy': [bgp_policy] | map(attribute='children') | flatten
                  | selectattr('bgpRsBgpNodeCtxPol', 'defined')
                  | map(attribute='bgpRsBgpNodeCtxPol.attributes.tnBgpCtxPolName')
                  | first | default(''),
                'as_path_policy': [bgp_policy] | map(attribute='children') | flatten
                  | selectattr('bgpRsBestPathCtrlPol', 'defined')
                  | map(attribute='bgpRsBestPathCtrlPol.attributes.tnBgpBestPathCtrlPolName')
                  | first | default(''),
                }%}
                {% for policy, value in bgpp.items() if value != '' %}
                {{ policy }}: {{ value }}
                {% endfor %}
            {% endif %}
            {# nodes list for apic.tenants.l3outs.node_profiles.nodes #}
            {% set nodes = [np]
              | selectattr('children', 'defined') | map(attribute='children') | flatten | list
              | selectattr('l3extRsNodeL3OutAtt', 'defined') | map(attribute='l3extRsNodeL3OutAtt')
              | default([])
            %}
            {% if nodes | length > 0 %}
              nodes:
              {% for node in nodes %}
                {% set node_data = {
                  'node_id': node.attributes.tDn 
                    | regex_replace('^topology/[^/]+/node-([0-9]+)$', '\\1'),
                  'pod_id': node.attributes.tDn
                    | regex_replace('^topology/pod-(\d{1,2})/node-[0-9]+$', '\\1')
                    | default(''),
                  'router_id': node.attributes.rtrId,
                  'router_id_as_loopback': 'false' if node.attributes.rtrIdLoopBack != 'yes' else ''
                    | default(''),
                  'loopbacks': [node] | selectattr('children', 'defined') | map(attribute='children')
                    | flatten | list | selectattr('l3extLoopBackIfP', 'defined')
                    | map(attribute='l3extLoopBackIfP.attributes.addr')
                    | list | default([]),
                }%}
                {% for policy, value in node_data.items() if value != '' and value != [] %}
                  {% if loop.first %}
                - {{ policy }}: {{ value }}
                  {% else %}
                    {% if policy == 'loopbacks' %}
                  loopbacks:
                    {% for loopback in value %}
                    - {{ loopback }}
                    {% endfor %}
                    {% elif policy == 'static_routes' %}
                  static_routes:
                    {{ value | to_nice_json }}
                    {% endif %}
                  {{ policy }}: {{ value }}
                  {% endif %}
                {% endfor %}
              {% endfor %}
            {% endif %}
            {# bgp_peers list for apic.tenants.l3outs.node_profiles.bgp_peers #}
            {% set node_peers = [np]
              | selectattr('children', 'defined') | map(attribute='children') | flatten | list
              | selectattr('bgpPeerP', 'defined') | map(attribute='bgpPeerP')
            %}
          {% endfor %}
        {% endif %}