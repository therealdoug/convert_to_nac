{%- set accintpolns = namespace(interface_policies={}) -%}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('cdpIfPol', 'defined')
  | map(attribute='cdpIfPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'admin_state': 'true' if pol.attributes.adminSt == 'enabled' else ''
      | default(''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('cdp_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{%- for pol in infra_children | selectattr('lldpIfPol', 'defined')
  | map(attribute='lldpIfPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'admin_rx_state': 'true' if pol.attributes.adminRxSt == 'enabled' else ''
      | default(''),
    'admin_tx_state': 'true' if pol.attributes.adminTxSt == 'enabled' else ''
      | default(''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('lldp_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('l2IfPol', 'defined')
  | map(attribute='l2IfPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'vlan_scope': pol.attributes.vlanScope | default('')
      | replace('global', ''),
    'qinq': 'true' if pol.attributes.qinq == 'enabled' else ''
      | default(''),
    'reflective_relay': 'true' if pol.attributes.vepa == 'enabled' else ''
      | default(''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('l2_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('fabricHIfPol', 'defined')
  | map(attribute='fabricHIfPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'speed': pol.attributes.speed | default('')
      | replace('inherit', ''),
    'auto': 'false' if pol.attributes.autoNeg == 'off' else ''
      | default(''),
    'fec_mode': pol.attributes.fecMode | default('') | replace('inherit', ''),
    'physical_media_type': pol.attributes.portPhyMediaType | default('')
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('link_level_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('lacpLagPol', 'defined')
  | map(attribute='lacpLagPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'mode': pol.attributes.mode,
    'description': pol.attributes.descr | default('') | regex_replace('^(.*[:*].*)$', '"\\1"'),
    'min_links': pol.attributes.minLinks | default('')
      | regex_replace('^1$', ''),
    'max_links': pol.attributes.maxLinks | default('')
      | regex_replace('^16$', ''),
    'suspend_individual': 'false' if 'susp-individual'
      not in pol.attributes.ctrl else '' | default(''),
    'graceful_convergence': 'false' if 'graceful-conv'
      not in pol.attributes.ctrl else '' | default(''),
    'fast_select_standby': 'false' if 'fast-sel-hot-stdby'
      not in pol.attributes.ctrl else '' | default(''),
    'load_defer': 'true' if 'load-defer' in pol.attributes.ctrl else ''
      | default(''),
    'symmetric_hash': 'true' if 'symmetric-hash' in pol.attributes.ctrl else ''
      | default(''),
    'hash_key': [pol] | selectattr('children', 'defined') | map(attribute='children')
          | flatten | list | selectattr('l2LoadBalancePol', 'defined')
          | map(attribute='l2LoadBalancePol') | map(attribute='attributes')
          | map(attribute='hashFields') | first | default(''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('port_channel_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('macsecPolCont', 'defined')
  | map(attribute='macsecPolCont') | selectattr('children', 'defined')
  | map(attribute='children') | flatten
  | selectattr('macsecParamPol', 'defined')
  | map(attribute='macsecParamPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default('') | regex_replace('^(.*[:*].*)$', '"\\1"'),
    'cipher_suite': pol.attributes.cipherSuite | default('')
      | replace('gcm-aes-xpn-256', ''),
    'confidentiality_offset': pol.attributes.confOffset | default('')
      | replace('offset-0', ''),
    'key_server_priority': pol.attributes.keySvrPrio | default('')
      | regex_replace('^16$', ''),
    'window_size': pol.attributes.replayWindow | default('')
      | regex_replace('^64$', ''),
    'key_expiry_time': pol.attributes.sakExpiryTime
      | default('') | replace('disabled', '') | regex_replace('^0$', ''),
    'security_policy': pol.attributes.secPolicy | default('')
    | replace('should-secure', ''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('macsec_parameters_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('macsecPolCont', 'defined')
  | map(attribute='macsecPolCont') | selectattr('children', 'defined')
  | map(attribute='children') | flatten
  | selectattr('macsecKeyChainPol', 'defined')
  | map(attribute='macsecKeyChainPol') | list
  | sort(attribute='attributes.name') %}
  {%- set kpns = namespace(key_policies=[]) %}
  {% for kp in [pol] | selectattr('children', 'defined')
    | map(attribute='children') | flatten
    | selectattr('macsecKeyPol', 'defined')
    | map(attribute='macsecKeyPol')
    | sort(attribute='attributes.name') | default('') %}
    {%- set kpns.key_policies = kpns.key_policies +[{
      'name': kp.attributes.name | default(''),
      'description': kp.attributes.descr | default('') | regex_replace('^(.*[:*].*)$', '"\\1"'),
      'key_name': kp.attributes.keyName | default(''),
      'pre_shared_key': kp.attributes.preSharedKey
        | default('!!--ENCRYPTED. PLEASE UPDATE MANUALLY--!!'),
    }] %}
  {% endfor %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default('') | regex_replace('^(.*[:*].*)$', '"\\1"'),
    'key_policies': kpns.key_policies | default(''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('macsec_keychain_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('macsecIfPol', 'defined')
  | map(attribute='macsecIfPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default('') | regex_replace('^(.*[:*].*)$', '"\\1"'),
    'admin_state': 'false' if pol.attributes.adminSt == 'disabled' else ''
      | default(''),
    'macsec_parameters_policy': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('macsecRsToParamPol', 'defined')
      | map(attribute='macsecRsToParamPol') | map(attribute='attributes')
      | map(attribute='tDn') | first | default('')
      | regex_replace('^uni/infra/macsecpcont/paramp-', ''),
    'macsec_keychain_policy': [pol] | selectattr('children', 'defined')
      | map(attribute='children') | flatten
      | selectattr('macsecRsToKeyChainPol', 'defined')
      | map(attribute='macsecRsToKeyChainPol') | map(attribute='attributes')
      | map(attribute='tDn') | first | default('')
      | regex_replace('^uni/infra/macsecpcont/keychainp-', ''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('macsec_interfaces_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('lacpIfPol', 'defined')
  | map(attribute='lacpIfPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default('') | regex_replace('^(.*[:*].*)$', '"\\1"'),
    'rate': pol.attributes.txRate | default('')
      | replace('normal', ''),
    'priority': pol.attributes.prio | default('')
      | regex_replace('^32768$', ''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('port_channel_member_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('mcpIfPol', 'defined')
  | map(attribute='mcpIfPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'admin_state': 'false' if pol.attributes.adminSt == 'disabled'
      | default('') else '',
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('mcp_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('stpIfPol', 'defined')
  | map(attribute='stpIfPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default('') | regex_replace('^(.*[:*].*)$', '"\\1"'),
    'bpdu_guard': 'true' if 'bpdu-guard' in pol.attributes.ctrl else ''
      | default(''),
    'bpdu_filter': 'true' if 'bpdu-filter' in pol.attributes.ctrl else ''
      | default(''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('spanning_tree_policies',
  ifpol.policies | default('')) %}

{%- set ifpol = namespace(policies=[]) -%}
{% for pol in infra_children | selectattr('stormctrlIfPol', 'defined')
  | map(attribute='stormctrlIfPol') | list | sort(attribute='attributes.name') %}
  {%- set ifpol.policies = ifpol.policies + [{
    'name': pol.attributes.name,
    'description': pol.attributes.descr | default('') | regex_replace('^(.*[:*].*)$', '"\\1"'),
    'alias': pol.attributes.nameAlias | default(''),
    'broadcast_burst_pps': pol.attributes.bcBurstPps | default('')
      | replace('unspecified', ''),
    'broadcast_burst_rate': pol.attributes.bcBurstRate | default('')
      | replace('100.000000', ''),
    'broadcast_rate': pol.attributes.bcRate | default('')
      | replace('100.000000', ''),
    'broadcast_pps': pol.attributes.bcRatePps | default('')
      | replace('unspecified', ''),
    'multicast_burst_pps': pol.attributes.mcBurstPps | default('')
      | replace('unspecified', ''),
    'multicast_burst_rate': pol.attributes.mcBurstRate | default('')
      | replace('100.000000', ''),
    'multicast_rate': pol.attributes.mcRate | default('')
      | replace('100.000000', ''),
    'multicast_pps': pol.attributes.mcRatePps | default('')
      | replace('unspecified', ''),
    'unknown_unicast_burst_pps': pol.attributes.uucBurstPps | default('')
      | replace('unspecified', ''),
    'unknown_unicast_burst_rate': pol.attributes.uucBurstRate | default('')
      | replace('100.000000', ''),
    'unknown_unicast_rate': pol.attributes.uucRate | default('')
      | replace('100.000000', ''),
    'unknown_unicast_pps': pol.attributes.uucRatePps | default('')
      | replace('unspecified', ''),
    'action': pol.attributes.stormCtrlAction | default('')
      | replace('drop', ''),
    'rate': pol.attributes.rate | default('')
      | replace('100.000000', ''),
    'rate_pps': pol.attributes.ratePps | default('')
      | replace('unspecified', ''),
    'burst_rate': pol.attributes.burstRate | default('')
      | replace('100.000000', ''),
    'burst_pps': pol.attributes.burstPps | default('')
      | replace('unspecified', ''),
  }] %}
{% endfor %}
{%- set _=accintpolns.interface_policies.__setitem__('storm_control_policies',
  ifpol.policies | default('')) -%}

{% include 'access_policies/netflow.nac.j2' %}
{% include 'access_policies/switch_policies.nac.j2' %}
{%- set _=accpolns.access_policies.__setitem__('interface_policies', accintpolns.interface_policies) -%}